<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="hbv.com.ua"/>
    <context:annotation-config/>
    <tx:annotation-driven proxy-target-class="true" transaction-manager="jdbcTransactionManager"/>
    <mybatis:scan base-package="hbv.com.ua.repository.mybatis.impl" factory-ref="sqlSessionFactoryBean"/>

    <!--sourcesPlaceholderConfigurer-->
    <bean id="sourcesPlaceholderConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="location" value="application-#{systemProperties['profile.active']?: 'def'}.properties"/>
        <property name="trimValues" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!--properties util-->
    <bean id="propertiesUtil" class="hbv.com.ua.util.ApplicationPropertiesUtil" factory-method="getInstance" init-method="init">
        <property name="propertyName" value="application-#{systemProperties['profile.active']?: 'def'}.properties"/>
    </bean>

    <bean id="pooledDataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
        <property name="username" value="${mybatis.postgres.username}"/>
        <property name="password" value="${mybatis.postgres.password}"/>
        <property name="url" value="${mybatis.postgres.url}"/>
        <property name="driver" value="${mybatis.config.driver}"/>
    </bean>

    <!--hikariDataSource-->
    <bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource" scope="singleton">
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>

    <!--sqlSessionFactoryBean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="hikariDataSource"/>
        <property name="configLocation" value="config/mybatis/sql-config.xml"/>
        <property name="mapperLocations" value="config/mybatis/mapper/*-mapper.xml"/>
    </bean>

    <!--sqlSessionTemplate-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryBean"/>
    </bean>

    <!--jdbcTransactionManager-->
    <bean id="jdbcTransactionManager" class="org.springframework.jdbc.support.JdbcTransactionManager">
        <property name="dataSource" ref="hikariDataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
        <property name="nestedTransactionAllowed" value="true"/>
        <property name="validateExistingTransaction" value="true"/>
    </bean>

    <!--classicConfiguration-->
    <bean id="classicConfiguration" class="org.flywaydb.core.api.configuration.ClassicConfiguration">
        <property name="dataSource" ref="hikariDataSource"/>
        <property name="defaultSchema" value="public"/>
        <property name="encoding" value="UTF-8"/>
    </bean>

    <!--flyway-->
    <bean id="flyway" class="org.flywaydb.core.Flyway">
        <constructor-arg index="0" ref="classicConfiguration"/>
    </bean>

    <!--undertow container-->
    <bean id="undertowContainer" class="hbv.com.ua.container.UndertowContainer" init-method="init" destroy-method="destroy"/>

    <!--bCryptPasswordEncoder-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>